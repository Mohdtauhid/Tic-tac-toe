import java.util.*;
public class Tic_tac_toe
{
    public static int get_Random(ArrayList<Integer> List)
    {
        Random rand= new Random();
        return List.get(rand.nextInt(List.size()));
    }
    
    public static int Next_Move(ArrayList<Integer> User_input, ArrayList<Integer> Remaining_element)
    {
        int[] Temp_user = new int[User_input.size()];
        
        for(int i=0;i<User_input.size();i++)
             Temp_user[i]= User_input.get(i);
        
        
        Arrays.sort(Temp_user);
        
        for(int i=0;i<Temp_user.length-1;i++)
        {
            int Step = 15 - (Temp_user[i]+Temp_user[i+1]);
            
            if(Remaining_element.contains(Step))
            return Step;
            
        }
        
        return 0;
    }
    
	public static void main(String[] args) {
		int[][] Combination = {{2,7,6},{2,9,4},{2,5,8},{7,5,3},{6,7,2},{6,1,8},{6,5,4},
		                     {7,2,6},{7,6,2},{6,4,5},{6,8,1},{6,2,7},{2,6,7},{2,4,9},
		                     {2,8,5},{9,2,4},{9,4,2},{9,5,1},{9,1,5},{5,7,3},{5,3,7},
		                    {5,2,8},{5,8,2},{5,1,9},{5,9,1},{5,4,6},{5,6,4},{1,6,8},
		                    {1,8,6},{1,5,9},{1,9,5},{4,9,2},{4,2,9},{4,3,8},{4,8,3},
		                    {4,5,6},{4,6,5},{3,5,7},{3,7,5},{3,4,8},{3,8,4},{8,1,6},
		                    {8,6,1},{8,5,2},{8,2,5},{8,3,4},{8,4,3}};
		
		ArrayList<ArrayList<Integer>> Combination_list = new ArrayList<>(Combination.length);
            for (int i = 0; i < Combination.length; ++i) 
            {
                   Combination_list.add(new ArrayList(Combination[0].length));
                   for (int j = 0; j < Combination[0].length; ++j) 
                    Combination_list.get(i).add(Combination[i][j]);
                    
            }
		
		//user and Computer input's list
		ArrayList<Integer> User_input = new ArrayList();
		ArrayList<Integer> Computer_input = new ArrayList();
		
		ArrayList<Integer> Used_element = new ArrayList();
		ArrayList<Integer> Remaining_element = new ArrayList();
		
		Remaining_element.add(2);
		Remaining_element.add(7);
		Remaining_element.add(6);
		Remaining_element.add(9);	
		Remaining_element.add(5);	
		Remaining_element.add(1);	
		Remaining_element.add(4);	
		Remaining_element.add(3);	
		Remaining_element.add(8);	
		
		Scanner sc = new Scanner(System.in);
		int User_score=0;
		int Computer_score=0;
		int Total_moves=0;
		int Computer_moves=0;
		while(true)
		{
		    System.out.println("User enter your choice:");
		    int n = sc.nextInt();
		    
		    if(Remaining_element.contains(n))
		    User_score+=n;
		    
		    User_input.add(n);
		    
		  Remaining_element.remove(new Integer(n));

		    if(Combination_list.contains(User_input))
		    {
		        System.out.println("User Won");
		        break;
		    }

		    if(++Total_moves == 9)
                break;
		   
		    
		    System.out.println("Computer's choice is:");
		    int num1;
		    if(Total_moves== 1)
		     num1= get_Random(Remaining_element);
		    
		    else
		    {
		        int val_win = 15 - Computer_score;
		        int val_def = 15 - User_score;
		         if(Remaining_element.contains(val_win) && Computer_moves>1)
                 num1 = val_win;
		         
		         else if(Remaining_element.contains(val_def))
		             num1 = val_def;
		         
		         else if(Computer_moves>2)
                 num1 = Next_Move(User_input,Remaining_element);
		         
		         else
		             num1 = get_Random(Remaining_element);
		         
		    }
		    
		    Computer_moves++;
		    System.out.println(num1);
		    Computer_score+=num1;
		    Computer_input.add(num1);
		    Remaining_element.remove(new Integer(num1));
		    
		     if(Combination_list.contains(Computer_input))
		    {
		        System.out.println("Computer Won");
		        break;
		    }
		    
		    System.out.println(User_score+" "+Computer_score+" "+Remaining_element.toString());
		    if(++Total_moves == 9)
		    {
		        System.out.println("Match Draw");
		        break;
		    }
		    
		}
		
	}
}
